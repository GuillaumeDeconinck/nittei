# https://birtony.medium.com/setting-up-automated-release-workflow-with-github-actions-628dbca2446e
name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    # Unfortunately, regex are not fully supported in YAML files, so we cannot
    # use the officially recommended regex to verify the semantic versioning tag
    # https://github.com/semver/semver/blob/master/semver.md#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  docker-release:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nettuscheduler
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost/nettuscheduler
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Set env
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            scheduler/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: fmeringdal
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run migrations
        run: |
          cd scheduler
          cargo install sqlx-cli --no-default-features --features postgres || true
          (cd crates/infra && sqlx migrate run)

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./scheduler
          push: true
          # fmeringdal/nettu-scheduler:latest
          tags: |
            fmeringdal/nettu-scheduler:${{ env.VERSION }}

  rust-client-release:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nettuscheduler
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost/nettuscheduler
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Set env
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            scheduler/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set version numbers
        run: |
          cd scheduler

          cd crates/utils
          echo "first"
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml
          echo "after"
          echo "utils toml"
          cat Cargo.toml
          cd ../../

          cd crates/domain
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml
          echo "before domain toml update"
          cat Cargo.toml
          echo "before domain toml update DONE"
          cargo update -p nettu_scheduler_utils --precise $VERSION
          echo "domain toml"
          cat Cargo.toml
          cd ../../

          cd crates/api_structs
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml
          cargo update -p nettu_scheduler_domain --precise $VERSION
          echo "api structs toml"
          cat Cargo.toml
          cd ../../

          cd clients/rust
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml
          cargo update -p nettu_scheduler_domain --precise $VERSION
          cargo update -p nettu_scheduler_api_structs --precise $VERSION
          echo "sdk toml"
          cat Cargo.toml

      - name: Run migrations
        run: |
          cd scheduler
          cargo install sqlx-cli --no-default-features --features postgres || true
          (cd crates/infra && sqlx migrate run)
