# https://birtony.medium.com/setting-up-automated-release-workflow-with-github-actions-628dbca2446e
name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    # Unfortunately, regex are not fully supported in YAML files, so we cannot
    # use the officially recommended regex to verify the semantic versioning tag
    # https://github.com/semver/semver/blob/master/semver.md#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  docker-release:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nettuscheduler
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost/nettuscheduler
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Set env
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            scheduler/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: fmeringdal
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run migrations
        run: |
          cd scheduler
          cargo install sqlx-cli --no-default-features --features postgres || true
          (cd crates/infra && sqlx migrate run)

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./scheduler
          push: true
          # fmeringdal/nettu-scheduler:latest
          tags: |
            fmeringdal/nettu-scheduler:${{ env.VERSION }}

  rust-client-release:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: nettuscheduler
        ports:
          - 5432:5432
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost/nettuscheduler
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Set env
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            scheduler/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run migrations
        run: |
          cd scheduler
          cargo install sqlx-cli --no-default-features --features postgres || true
          (cd crates/infra && sqlx migrate run)

      - name: Login to crates.io
        env:
          CRATE_PUBLISH_TOKEN: ${{secrets.CRATE_PUBLISH_TOKEN}}
        run: |
          cargo login $CRATE_PUBLISH_TOKEN

      - name: Set version numbers
        run: |
          cd scheduler

          cd crates/utils
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml
          cd ../../

          cd crates/domain
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml
          sed -i "s/path = \"..\/utils\", version = \"*.*.*\"/path = \"..\/utils\", version = \"$VERSION\"/" ./Cargo.toml
          cd ../../

          cd crates/api_structs
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml
          sed -i "s/path = \"..\/domain\", version = \"*.*.*\"/path = \"..\/domain\", version = \"$VERSION\"/" ./Cargo.toml
          echo "api_structs toml"
          cat ./Cargo.toml
          echo "api_structs toml DONE"
          cd ../../

          cd crates/infra
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml
          cd ../../

          cd crates/api
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml
          cd ../../

          cd clients/rust
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml
          sed -i "s/path = \"..\/..\/crates\/domain\", version = \"*.*.*\"/path = \"..\/..\/crates\/domain\", version = \"$VERSION\"/" ./Cargo.toml
          sed -i "s/path = \"..\/..\/crates\/api_structs\", version = \"*.*.*\"/path = \"..\/..\/crates\/api_structs\", version = \"$VERSION\"/" ./Cargo.toml
          echo "SDK toml"
          cat ./Cargo.toml
          echo "SDK toml DONE"
          cd ../../

          # Root Cargo.toml
          sed -i "0,/\(version *= *\).*/{s/\(version *= *\).*/\1\"$VERSION\"/}" ./Cargo.toml

          cargo check --all

      - name: Publish crates
        run: |
          cd scheduler

          cd crates/utils
          cargo publish --allow-dirty
          cd ../../

          # Make sure published version is available at crates.io
          sleep 30

          cd crates/domain
          cargo publish --allow-dirty
          cd ../../

          # Make sure published version is available at crates.io
          sleep 30

          cd crates/api_structs
          cargo publish --allow-dirty
          cd ../../

          # Make sure published version is available at crates.io
          sleep 30

          cd clients/rust
          cargo publish --allow-dirty
          cd ../../

      - name: Commit & Push version changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: testing-v
          message: |
            Autopublish: Update cargo workspace deps on release

  javascript-client-release:
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "npm"
          cache-dependency-path: scheduler/clients/javascript/package-lock.json

      - name: Install deps
        run: |
          cd scheduler/clients/javascript
          npm install

      - name: Set version number
        run: |
          cd scheduler/clients/javascript
          npm version $VERSION

      - name: Publish package
        run: |
          cd scheduler/clients/javascript
          echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" > ~/.npmrc
          npm run deploy
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

      - name: Commit & Push version changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: testing-v
          message: |
            Autopublish: Update cargo workspace deps on release
